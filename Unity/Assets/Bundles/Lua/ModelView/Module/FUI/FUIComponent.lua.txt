-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local FairyGUI = FairyGUI
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("FUIComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      self.Root = ET.EntityFactory.Create1(self:getDomain(), FairyGUI.GRoot.getinst(), false, ET.FUI, FairyGUI.GObject)
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.FUIComponent)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          methods = {
            { "Awake", 0x106, Awake, out.ET.FUIComponent }
          },
          class = { 0x6, out.ET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  -- <summary>
  -- 管理所有顶层UI, 顶层UI都是GRoot的孩子
  -- </summary>
  namespace.class("FUIComponent", function (namespace)
    local Dispose, Add, Remove, Get, GetAll, Clear, __ctor__
    __ctor__ = function (this)
      ET.Entity.__ctor__(this)
    end
    Dispose = function (this)
      if this:getIsDisposed() then
        return
      end

      ET.Entity.Dispose(this)

      local default = this.Root
      if default ~= nil then
        default:Dispose()
      end
      this.Root = nil
    end
    Add = function (this, Name, ui, asChildGObject)
      local default = this.Root
      if default ~= nil then
        default:Add(Name, ui, asChildGObject)
      end
    end
    Remove = function (this, name)
      local default = this.Root
      if default ~= nil then
        default:Remove(name)
      end
    end
    Get = function (this, name)
      local default = this.Root
      if default ~= nil then
        default = default:Get(name)
      end
      return default
    end
    GetAll = function (this)
      local default = this.Root
      if default ~= nil then
        default = default:GetAll()
      end
      return default
    end
    Clear = function (this)
      local childrens = GetAll(this)

      if childrens ~= nil then
        for _, fui in System.each(childrens) do
          Remove(this, fui:getName())
        end
      end
    end
    return {
      base = function (out)
        return {
          out.ET.Entity
        }
      end,
      Dispose = Dispose,
      Add = Add,
      Remove = Remove,
      Get = Get,
      GetAll = GetAll,
      Clear = Clear,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "Root", 0x6, out.ET.FUI }
          },
          methods = {
            { "Add", 0x306, Add, System.String, out.ET.FUI, System.Boolean },
            { "Clear", 0x6, Clear },
            { "Dispose", 0x6, Dispose },
            { "Get", 0x186, Get, System.String, out.ET.FUI },
            { "GetAll", 0x86, GetAll, System.Array(out.ET.FUI) },
            { "Remove", 0x106, Remove, System.String }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
