-- Generated by CSharp.lua Compiler
local System = System
local FairyGUI = FairyGUI
local ET
local DictGObjectFUI
System.import(function (out)
  ET = out.ET
  DictGObjectFUI = System.Dictionary(FairyGUI.GObject, ET.FUI)
end)
System.namespace("ET", function (namespace)
  namespace.class("GObjectHelper", function (namespace)
    local keyValuePairs, Get, Add, Remove, static
    static = function (this)
      keyValuePairs = DictGObjectFUI()
    end
    Get = function (self, T)
      if self ~= nil and keyValuePairs:ContainsKey(self) then
        return System.as(keyValuePairs:get(self), T)
      end

      return nil --[[default(T)]]
    end
    Add = function (self, fui)
      if self ~= nil and fui ~= nil then
        keyValuePairs:set(self, fui)
      end
    end
    Remove = function (self)
      if self ~= nil and keyValuePairs:ContainsKey(self) then
        local result = keyValuePairs:get(self)
        keyValuePairs:RemoveKey(self)
        return result
      end

      return nil
    end
    return {
      Get = Get,
      Add = Add,
      Remove = Remove,
      static = static,
      __metadata__ = function (out)
        return {
          fields = {
            { "keyValuePairs", 0x9, System.Dictionary(out.FairyGUI.GObject, out.ET.FUI) }
          },
          methods = {
            { "Add", 0x20E, Add, out.FairyGUI.GObject, out.ET.FUI },
            { "Get", 0x1018E, Get, function (T) return out.FairyGUI.GObject, T end },
            { "Remove", 0x18E, Remove, out.FairyGUI.GObject, out.ET.FUI }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
