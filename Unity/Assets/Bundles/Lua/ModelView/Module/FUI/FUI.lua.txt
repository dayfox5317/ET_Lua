-- Generated by CSharp.lua Compiler
local System = System
local Linq = System.Linq.Enumerable
local ET = ET
local FairyGUI = FairyGUI
local ET
local DictStringFUI
System.import(function (out)
  ET = out.ET
  DictStringFUI = System.Dictionary(System.String, ET.FUI)
end)
System.namespace("ET", function (namespace)
  namespace.class("FUIAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self, gObject)
      self.GObject = gObject
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_2(out.ET.FUI, out.FairyGUI.GObject)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          methods = {
            { "Awake", 0x206, Awake, out.ET.FUI, out.FairyGUI.GObject }
          },
          class = { 0x6, out.ET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("FUI", function (namespace)
    local getName, setName, getVisible, setVisible, getIsComponent, getIsRoot, getIsEmpty, Dispose, 
    Add, MakeFullScreen, Remove, RemoveNoDispose, RemoveChildren, Get, GetAll, class, 
    __ctor__
    __ctor__ = function (this)
      this.fuiChildren = DictStringFUI()
      ET.Entity.__ctor__(this)
    end
    getName = function (this)
      if this.GObject == nil then
        return ("")
      end

      return this.GObject.name
    end
    setName = function (this, value)
      if this.GObject == nil then
        return
      end

      this.GObject.name = value
    end
    getVisible = function (this)
      if this.GObject == nil then
        return false
      end

      return this.GObject:getvisible()
    end
    setVisible = function (this, value)
      if this.GObject == nil then
        return
      end

      this.GObject:setvisible(value)
    end
    getIsComponent = function (this)
      return System.is(this.GObject, FairyGUI.GComponent)
    end
    getIsRoot = function (this)
      return System.is(this.GObject, FairyGUI.GRoot)
    end
    getIsEmpty = function (this)
      return this.GObject == nil
    end
    Dispose = function (this)
      if this:getIsDisposed() then
        return
      end

      ET.Entity.Dispose(this)

      -- 从父亲中删除自己
      local default = this:GetParent(class)
      if default ~= nil then
        RemoveNoDispose(default, getName(this))
      end

      -- 删除所有的孩子
      for _, ui in System.each(Linq.ToArray(this.fuiChildren:getValues())) do
        ui:Dispose()
      end

      this.fuiChildren:Clear()

      -- 删除自己的UI
      if not getIsRoot(this) and not this.isFromFGUIPool then
        this.GObject:Dispose()
      end

      this.GObject = nil
      this.isFromFGUIPool = false
    end
    Add = function (this, Name, ui, asChildGObject)
      if ui == nil or getIsEmpty(ui) then
        System.throw(System.Exception("ui can not be empty" .. ""))
      end


      if System.String.IsNullOrWhiteSpace(Name) then
        System.throw(System.Exception("fui Name can not be empty" .. ""))
      end

      if this.fuiChildren:ContainsKey(Name) then
        System.throw(System.Exception("fui Name(" .. Name .. ") already exist"))
      end

      this.fuiChildren:AddKeyValue(Name, ui)

      if getIsComponent(this) and asChildGObject then
        this.GObject:getasCom():AddChild(ui.GObject)
      end

      ui.UIParent = this
    end
    MakeFullScreen = function (this)
      local default = this.GObject
      if default ~= nil then
        default = default:getasCom()
        if default ~= nil then
          default = default:MakeFullScreen()
        end
      end
    end
    Remove = function (this, name)
      if this:getIsDisposed() then
        return
      end

      local ui

      local default
      default, ui = this.fuiChildren:TryGetValue(name)
      if default then
        this.fuiChildren:RemoveKey(name)

        if ui ~= nil then
          if getIsComponent(this) then
            this.GObject:getasCom():RemoveChild(ui.GObject, false)
          end

          ui:Dispose()
        end
      end
    end
    -- <summary>
    -- 一般情况不要使用此方法，如需使用，需要自行管理返回值的FUI的释放。
    -- </summary>
    RemoveNoDispose = function (this, name)
      if this:getIsDisposed() then
        return nil
      end

      local ui

      local default
      default, ui = this.fuiChildren:TryGetValue(name)
      if default then
        this.fuiChildren:RemoveKey(name)

        if ui ~= nil then
          if getIsComponent(this) then
            this.GObject:getasCom():RemoveChild(ui.GObject, false)
          end

          ui:setParent(nil)
        end
      end

      return ui
    end
    RemoveChildren = function (this)
      for _, child in System.each(Linq.ToArray(this.fuiChildren:getValues())) do
        child:Dispose()
      end

      this.fuiChildren:Clear()
    end
    Get = function (this, name)
      local child

      local default
      default, child = this.fuiChildren:TryGetValue(name)
      if default then
        return child
      end

      return nil
    end
    GetAll = function (this)
      return Linq.ToArray(this.fuiChildren:getValues())
    end
    class = {
      base = function (out)
        return {
          out.ET.Entity
        }
      end,
      getName = getName,
      setName = setName,
      getVisible = getVisible,
      setVisible = setVisible,
      getIsComponent = getIsComponent,
      getIsRoot = getIsRoot,
      getIsEmpty = getIsEmpty,
      isFromFGUIPool = false,
      Dispose = Dispose,
      Add = Add,
      MakeFullScreen = MakeFullScreen,
      Remove = Remove,
      RemoveNoDispose = RemoveNoDispose,
      RemoveChildren = RemoveChildren,
      Get = Get,
      GetAll = GetAll,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "fuiChildren", 0x1, System.Dictionary(System.String, out.ET.FUI) },
            { "GObject", 0x6, out.FairyGUI.GObject },
            { "isFromFGUIPool", 0x3, System.Boolean },
            { "UIParent", 0x6, class }
          },
          properties = {
            { "IsComponent", 0x206, System.Boolean, getIsComponent },
            { "IsEmpty", 0x206, System.Boolean, getIsEmpty },
            { "IsRoot", 0x206, System.Boolean, getIsRoot },
            { "Name", 0x106, System.String, getName, setName },
            { "Visible", 0x106, System.Boolean, getVisible, setVisible }
          },
          methods = {
            { "Add", 0x306, Add, System.String, class, System.Boolean },
            { "Dispose", 0x6, Dispose },
            { "Get", 0x186, Get, System.String, class },
            { "GetAll", 0x86, GetAll, System.Array(out.ET.FUI) },
            { "MakeFullScreen", 0x6, MakeFullScreen },
            { "Remove", 0x106, Remove, System.String },
            { "RemoveChildren", 0x6, RemoveChildren },
            { "RemoveNoDispose", 0x186, RemoveNoDispose, System.String, class }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
