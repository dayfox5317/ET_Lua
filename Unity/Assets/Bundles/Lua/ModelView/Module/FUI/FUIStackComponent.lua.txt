-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ET
local StackFUI
System.import(function (out)
  ET = out.ET
  StackFUI = System.Stack(ET.FUI)
end)
System.namespace("ET", function (namespace)
  -- <summary>
  -- UIæ ˆ
  -- </summary>
  namespace.class("FUIStackComponent", function (namespace)
    local getCount, Push, Pop, Clear, __ctor__
    __ctor__ = function (this)
      this.uis = StackFUI()
      ET.Entity.__ctor__(this)
    end
    getCount = function (this)
      return #this.uis
    end
    Push = function (this, fui)
      this.uis:Peek():setVisible(false)
      this.uis:Push(fui)
    end
    Pop = function (this)
      local fui = this.uis:Pop()
      fui:Dispose()
      if #this.uis > 0 then
        this.uis:Peek():setVisible(true)
      end
    end
    Clear = function (this)
      while #this.uis > 0 do
        local fui = this.uis:Pop()
        fui:Dispose()
      end
    end
    return {
      base = function (out)
        return {
          out.ET.Entity
        }
      end,
      getCount = getCount,
      Push = Push,
      Pop = Pop,
      Clear = Clear,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "uis", 0x1, System.Stack(out.ET.FUI) }
          },
          properties = {
            { "Count", 0x206, System.Int32, getCount }
          },
          methods = {
            { "Clear", 0x6, Clear },
            { "Pop", 0x6, Pop },
            { "Push", 0x106, Push, out.ET.FUI }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
