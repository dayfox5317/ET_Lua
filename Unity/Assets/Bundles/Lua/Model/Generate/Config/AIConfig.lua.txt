-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ET
local ListAIConfig
local DictInt32AIConfig
local SortedDictionary_2Int32AIConfig
local DictInt32SortedDictionary_2Int32AIConfig
System.import(function (out)
  ET = out.ET
  ListAIConfig = System.List(ET.AIConfig)
  DictInt32AIConfig = System.Dictionary(System.Int32, ET.AIConfig)
  SortedDictionary_2Int32AIConfig = System.SortedDictionary_2(System.Int32, ET.AIConfig)
  DictInt32SortedDictionary_2Int32AIConfig = System.Dictionary(System.Int32, SortedDictionary_2Int32AIConfig)
end)
System.namespace("ET", function (namespace)
  namespace.class("AIConfigCategory", function (namespace)
    local GetAI, EndInit, AfterDeserialization, Get, Contain, GetAll, GetOne, class, 
    __ctor__
    __ctor__ = function (this)
      this.AIConfigs = DictInt32SortedDictionary_2Int32AIConfig()
      this.dict = DictInt32AIConfig()
      this.list = ListAIConfig()
      ET.ProtoObject.__ctor__(this)
      class.Instance = this
    end
    GetAI = function (this, aiConfigId)
      return this.AIConfigs:get(aiConfigId)
    end
    EndInit = function (this)
      ET.Object.EndInit(this)

      for _, kv in System.each(GetAll(this)) do
        local aiNodeConfig
        local default
        default, aiNodeConfig = this.AIConfigs:TryGetValue(kv.Value.AIConfigId)
        if not default then
          aiNodeConfig = SortedDictionary_2Int32AIConfig()
          this.AIConfigs:AddKeyValue(kv.Value.AIConfigId, aiNodeConfig)
        end

        aiNodeConfig:AddKeyValue(kv.Key, kv.Value)
      end
    end
    AfterDeserialization = function (this)
      for _, config in System.each(this.list) do
        this.dict:AddKeyValue(config:getId(), config)
      end
      this.list:Clear()
      this:EndInit()
    end
    Get = function (this, id)
      local _, item = this.dict:TryGetValue(id)

      if item == nil then
        System.throw(System.Exception("配置找不到，配置表名: " .. "AIConfig" --[[nameof (AIConfig)]] .. "，配置id: " .. id))
      end

      return item
    end
    Contain = function (this, id)
      return this.dict:ContainsKey(id)
    end
    GetAll = function (this)
      return this.dict
    end
    GetOne = function (this)
      if this.dict == nil or this.dict:getCount() <= 0 then
        return nil
      end
      return this.dict:getValues():GetEnumerator():getCurrent()
    end
    class = {
      base = function (out)
        return {
          out.ET.ProtoObject
        }
      end,
      GetAI = GetAI,
      EndInit = EndInit,
      AfterDeserialization = AfterDeserialization,
      Get = Get,
      Contain = Contain,
      GetAll = GetAll,
      GetOne = GetOne,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "AIConfigs", 0x6, System.Dictionary(System.Int32, System.SortedDictionary_2(System.Int32, out.ET.AIConfig)) },
            { "dict", 0x1, System.Dictionary(System.Int32, out.ET.AIConfig), out.ProtoBuf.ProtoIgnoreAttribute(), out.MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute() },
            { "Instance", 0xE, class },
            { "list", 0x1, System.List(out.ET.AIConfig), out.MongoDB.Bson.Serialization.Attributes.BsonElementAttribute(), out.ProtoBuf.ProtoMemberAttribute(1) }
          },
          methods = {
            { ".ctor", 0x6, nil },
            { "AfterDeserialization", 0x6, AfterDeserialization, out.ProtoBuf.ProtoAfterDeserializationAttribute() },
            { "Contain", 0x186, Contain, System.Int32, System.Boolean },
            { "EndInit", 0x6, EndInit },
            { "Get", 0x186, Get, System.Int32, out.ET.AIConfig },
            { "GetAI", 0x186, GetAI, System.Int32, System.SortedDictionary_2(System.Int32, out.ET.AIConfig) },
            { "GetAll", 0x86, GetAll, System.Dictionary(System.Int32, out.ET.AIConfig) },
            { "GetOne", 0x86, GetOne, out.ET.AIConfig }
          },
          class = { 0x6, out.ProtoBuf.ProtoContractAttribute(), out.ET.ConfigAttribute() }
        }
      end
    }
    return class
  end)

  namespace.class("AIConfig", function (namespace)
    local getId, setId, AfterDeserialization
    getId, setId = System.property("Id")
    AfterDeserialization = function (this)
      this:EndInit()
    end
    return {
      base = function (out)
        return {
          out.ET.ProtoObject,
          out.ET.IConfig
        }
      end,
      Id = 0,
      getId = getId,
      setId = setId,
      AIConfigId = 0,
      Order = 0,
      AfterDeserialization = AfterDeserialization,
      __metadata__ = function (out)
        return {
          properties = {
            { "AIConfigId", 0x6, System.Int32, System.apply(out.ProtoBuf.ProtoMemberAttribute(2), function (default) default:setIsRequired(true) end) },
            { "Id", 0x106, System.Int32, getId, setId, System.apply(out.ProtoBuf.ProtoMemberAttribute(1), function (default) default:setIsRequired(true) end) },
            { "Name", 0x6, System.String, System.apply(out.ProtoBuf.ProtoMemberAttribute(4), function (default) default:setIsRequired(true) end) },
            { "NodeParams", 0x6, System.Array(System.Int32), System.apply(out.ProtoBuf.ProtoMemberAttribute(5), function (default) default:setIsRequired(true) end) },
            { "Order", 0x6, System.Int32, System.apply(out.ProtoBuf.ProtoMemberAttribute(3), function (default) default:setIsRequired(true) end) }
          },
          methods = {
            { "AfterDeserialization", 0x6, AfterDeserialization, out.ProtoBuf.ProtoAfterDeserializationAttribute() }
          },
          class = { 0x6, out.ProtoBuf.ProtoContractAttribute() }
        }
      end
    }
  end)
end)
