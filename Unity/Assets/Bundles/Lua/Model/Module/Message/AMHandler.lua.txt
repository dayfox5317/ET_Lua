-- Generated by CSharp.lua Compiler
local System = System
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("AMHandler_1", function (namespace)
    return function (Message)
      local Handle, GetMessageType, GetResponseType
      Handle = function (this, session, msg)
        local message = System.as(msg, Message)
        if message == nil then
          ET.Log.Error("消息类型转换错误: " .. msg:GetType():getName() .. " to " .. System.typeof(Message):getName())
          return
        end

        if session:getIsDisposed() then
          ET.Log.Error("session disconnect " .. System.toString(msg))
          return
        end

        this:Run(session, message):Coroutine()
      end
      GetMessageType = function (this)
        return System.typeof(Message)
      end
      GetResponseType = function (this)
        return nil
      end
      return {
        base = function (out)
          return {
            out.ET.IMHandler
          }
        end,
        Handle = Handle,
        GetMessageType = GetMessageType,
        GetResponseType = GetResponseType,
        __metadata__ = function (out)
          return {
            methods = {
              { "GetMessageType", 0x86, GetMessageType, System.Type },
              { "GetResponseType", 0x86, GetResponseType, System.Type },
              { "Handle", 0x206, Handle, out.ET.Session, System.Object }
            },
            class = { 0x106, Message, out.ET.MessageHandlerAttribute() }
          }
        end
      }
    end
  end)
end)
