-- Generated by CSharp.lua Compiler
local System = System
local HashSetUInt16 = System.HashSet(System.UInt16)
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("OpcodeHelper", function (namespace)
    local ignoreDebugLogMessageSet, IsNeedLogMessage, IsOuterMessage, IsInnerMessage, LogMsg, LogMsg1, static
    static = function (this)
      local default = HashSetUInt16()
      default:Add(20014 --[[OuterOpcode.C2G_Ping]])
      default:Add(20015 --[[OuterOpcode.G2C_Ping]])
      ignoreDebugLogMessageSet = default
    end
    IsNeedLogMessage = function (opcode)
      if ignoreDebugLogMessageSet:Contains(opcode) then
        return false
      end

      return true
    end
    IsOuterMessage = function (opcode)
      return opcode >= 20000
    end
    IsInnerMessage = function (opcode)
      return opcode < 20000
    end
    LogMsg = function (zone, opcode, message)
      if not IsNeedLogMessage(opcode) then
        return
      end

      ET.Game.ILog:Debug("zone: {0} {1}", zone, message:ToString())
    end
    LogMsg1 = function (opcode, actorId, message)
      if not IsNeedLogMessage(opcode) then
        return
      end

      ET.Game.ILog:Debug("actorId: {0} {1}", actorId, message:ToString())
    end
    return {
      IsOuterMessage = IsOuterMessage,
      IsInnerMessage = IsInnerMessage,
      LogMsg = LogMsg,
      LogMsg1 = LogMsg1,
      static = static,
      __metadata__ = function (out)
        return {
          fields = {
            { "ignoreDebugLogMessageSet", 0x9, System.HashSet(System.UInt16) }
          },
          methods = {
            { "IsInnerMessage", 0x18E, IsInnerMessage, System.UInt16, System.Boolean },
            { "IsNeedLogMessage", 0x189, IsNeedLogMessage, System.UInt16, System.Boolean },
            { "IsOuterMessage", 0x18E, IsOuterMessage, System.UInt16, System.Boolean },
            { "LogMsg", 0x30E, LogMsg, System.Int32, System.UInt16, System.Object },
            { "LogMsg", 0x30E, LogMsg1, System.UInt16, System.Int64, System.Object }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
