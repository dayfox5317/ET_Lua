-- Generated by CSharp.lua Compiler
local System = System
local ET
local ListINumericWatcher
local DictNumericTypeListINumericWatcher
System.import(function (out)
  ET = out.ET
  ListINumericWatcher = System.List(ET.INumericWatcher)
  DictNumericTypeListINumericWatcher = System.Dictionary(ET.NumericType, ListINumericWatcher)
end)
System.namespace("ET", function (namespace)
  namespace.class("NumericWatcherComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      ET.NumericWatcherComponent.Instance = self
      self:Awake()
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.NumericWatcherComponent)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          methods = {
            { "Awake", 0x106, Awake, out.ET.NumericWatcherComponent }
          },
          class = { 0x6 }
        }
      end
    }
  end)


  namespace.class("NumericWatcherComponentLoadSystem", function (namespace)
    local Load
    Load = function (this, self)
      self:Load()
    end
    return {
      base = function (out)
        return {
          out.ET.LoadSystem_1(out.ET.NumericWatcherComponent)
        }
      end,
      Load = Load,
      __metadata__ = function (out)
        return {
          methods = {
            { "Load", 0x106, Load, out.ET.NumericWatcherComponent }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  -- <summary>
  -- 监视数值变化组件,分发监听
  -- </summary>
  namespace.class("NumericWatcherComponent", function (namespace)
    local Awake, Load, Run, class, __ctor__
    __ctor__ = function (this)
      ET.Entity.__ctor__(this)
    end
    Awake = function (this)
      Load(this)
    end
    Load = function (this)
      this.allWatchers = DictNumericTypeListINumericWatcher()

      local types = ET.Game.getEventSystem():GetTypes(System.typeof(ET.NumericWatcherAttribute))
      for _, type in System.each(types) do
        local attrs = type:GetCustomAttributes(System.typeof(ET.NumericWatcherAttribute), false)

        for _, attr in System.each(attrs) do
          local numericWatcherAttribute = System.cast(ET.NumericWatcherAttribute, attr)
          local obj = System.cast(ET.INumericWatcher, System.Activator.CreateInstance(type))
          if not this.allWatchers:ContainsKey(numericWatcherAttribute.NumericType) then
            this.allWatchers:AddKeyValue(numericWatcherAttribute.NumericType, ListINumericWatcher())
          end
          this.allWatchers:get(numericWatcherAttribute.NumericType):Add(obj)
        end
      end
    end
    Run = function (this, numericType, id, value)
      local list
      local default
      default, list = this.allWatchers:TryGetValue(numericType)
      if not default then
        return
      end
      for _, numericWatcher in System.each(list) do
        numericWatcher:Run(id, value)
      end
    end
    class = {
      base = function (out)
        return {
          out.ET.Entity
        }
      end,
      Awake = Awake,
      Load = Load,
      Run = Run,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "Instance", 0xE, class }
          },
          fields = {
            { "allWatchers", 0x1, System.Dictionary(out.ET.NumericType, System.List(out.ET.INumericWatcher)) }
          },
          methods = {
            { "Awake", 0x6, Awake },
            { "Load", 0x6, Load },
            { "Run", 0x306, Run, out.ET.NumericType, System.Int64, System.Int64 }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
