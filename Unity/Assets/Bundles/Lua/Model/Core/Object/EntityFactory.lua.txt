-- Generated by CSharp.lua Compiler
local System = System
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("EntityFactory", function (namespace)
    local CreateWithParent, CreateWithParent1, CreateWithParent2, CreateWithParent3, CreateWithParent4, CreateWithParentAndId, CreateWithParentAndId1, CreateWithParentAndId2, 
    CreateWithParentAndId3, CreateWithParentAndId4, Create, Create1, Create2, Create3, Create4, CreateWithId, 
    CreateWithId1, CreateWithId2, CreateWithId3
    CreateWithParent = function (parent, isFromPool, T)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = ET.IdGenerater.Instance:GenerateId()
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake(component)
      return component
    end
    CreateWithParent1 = function (parent, a, isFromPool, T, A)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = ET.IdGenerater.Instance:GenerateId()
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake1(component, a, A)
      return component
    end
    CreateWithParent2 = function (parent, a, b, isFromPool, T, A, B)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = ET.IdGenerater.Instance:GenerateId()
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake2(component, a, b, A, B)
      return component
    end
    CreateWithParent3 = function (parent, a, b, c, isFromPool, T, A, B, C)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = ET.IdGenerater.Instance:GenerateId()
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake3(component, a, b, c, A, B, C)
      return component
    end
    CreateWithParent4 = function (parent, a, b, c, d, isFromPool, T, A, B, C, D)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = ET.IdGenerater.Instance:GenerateId()
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake4(component, a, b, c, d, A, B, C, D)
      return component
    end
    CreateWithParentAndId = function (parent, id, isFromPool, T)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = id
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake(component)
      return component
    end
    CreateWithParentAndId1 = function (parent, id, a, isFromPool, T, A)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = id
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake1(component, a, A)
      return component
    end
    CreateWithParentAndId2 = function (parent, id, a, b, isFromPool, T, A, B)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = id
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake2(component, a, b, A, B)
      return component
    end
    CreateWithParentAndId3 = function (parent, id, a, b, c, isFromPool, T, A, B, C)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = id
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake3(component, a, b, c, A, B, C)
      return component
    end
    CreateWithParentAndId4 = function (parent, id, a, b, c, d, isFromPool, T, A, B, C, D)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component.Id = id
      component:setParent(parent)

      ET.EventSystem.getInstance():Awake4(component, a, b, c, d, A, B, C, D)
      return component
    end
    Create = function (domain, isFromPool, T)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = ET.IdGenerater.Instance:GenerateId()
      ET.EventSystem.getInstance():Awake(component)
      return component
    end
    Create1 = function (domain, a, isFromPool, T, A)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = ET.IdGenerater.Instance:GenerateId()
      ET.EventSystem.getInstance():Awake1(component, a, A)
      return component
    end
    Create2 = function (domain, a, b, isFromPool, T, A, B)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = ET.IdGenerater.Instance:GenerateId()
      ET.EventSystem.getInstance():Awake2(component, a, b, A, B)
      return component
    end
    Create3 = function (domain, a, b, c, isFromPool, T, A, B, C)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = ET.IdGenerater.Instance:GenerateId()
      ET.EventSystem.getInstance():Awake3(component, a, b, c, A, B, C)
      return component
    end
    Create4 = function (domain, a, b, c, d, isFromPool, T, A, B, C, D)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = ET.IdGenerater.Instance:GenerateId()
      ET.EventSystem.getInstance():Awake4(component, a, b, c, d, A, B, C, D)
      return component
    end
    CreateWithId = function (domain, id, isFromPool, T)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = id
      ET.EventSystem.getInstance():Awake(component)
      return component
    end
    CreateWithId1 = function (domain, id, a, isFromPool, T, A)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = id
      ET.EventSystem.getInstance():Awake1(component, a, A)
      return component
    end
    CreateWithId2 = function (domain, id, a, b, isFromPool, T, A, B)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = id
      ET.EventSystem.getInstance():Awake2(component, a, b, A, B)
      return component
    end
    CreateWithId3 = function (domain, id, a, b, c, isFromPool, T, A, B, C)
      local type = System.typeof(T)
      local component = System.cast(T, ET.Entity.Create(type, isFromPool))
      component:setDomain(domain)
      component.Id = id
      ET.EventSystem.getInstance():Awake3(component, a, b, c, A, B, C)
      return component
    end
    return {
      CreateWithParent = CreateWithParent,
      CreateWithParent1 = CreateWithParent1,
      CreateWithParent2 = CreateWithParent2,
      CreateWithParent3 = CreateWithParent3,
      CreateWithParent4 = CreateWithParent4,
      CreateWithParentAndId = CreateWithParentAndId,
      CreateWithParentAndId1 = CreateWithParentAndId1,
      CreateWithParentAndId2 = CreateWithParentAndId2,
      CreateWithParentAndId3 = CreateWithParentAndId3,
      CreateWithParentAndId4 = CreateWithParentAndId4,
      Create = Create,
      Create1 = Create1,
      Create2 = Create2,
      Create3 = Create3,
      Create4 = Create4,
      CreateWithId = CreateWithId,
      CreateWithId1 = CreateWithId1,
      CreateWithId2 = CreateWithId2,
      CreateWithId3 = CreateWithId3,
      __metadata__ = function (out)
        return {
          methods = {
            { "Create", 0x5068E, Create4, function (T, A, B, C, D) return out.ET.Entity, A, B, C, D, System.Boolean, T end },
            { "Create", 0x4058E, Create3, function (T, A, B, C) return out.ET.Entity, A, B, C, System.Boolean, T end },
            { "Create", 0x3048E, Create2, function (T, A, B) return out.ET.Entity, A, B, System.Boolean, T end },
            { "Create", 0x2038E, Create1, function (T, A) return out.ET.Entity, A, System.Boolean, T end },
            { "Create", 0x1028E, Create, function (T) return out.ET.Entity, System.Boolean, T end },
            { "CreateWithId", 0x4068E, CreateWithId3, function (T, A, B, C) return out.ET.Entity, System.Int64, A, B, C, System.Boolean, T end },
            { "CreateWithId", 0x2048E, CreateWithId1, function (T, A) return out.ET.Entity, System.Int64, A, System.Boolean, T end },
            { "CreateWithId", 0x1038E, CreateWithId, function (T) return out.ET.Entity, System.Int64, System.Boolean, T end },
            { "CreateWithId", 0x3058E, CreateWithId2, function (T, A, B) return out.ET.Entity, System.Int64, A, B, System.Boolean, T end },
            { "CreateWithParent", 0x1028E, CreateWithParent, function (T) return out.ET.Entity, System.Boolean, T end },
            { "CreateWithParent", 0x5068E, CreateWithParent4, function (T, A, B, C, D) return out.ET.Entity, A, B, C, D, System.Boolean, T end },
            { "CreateWithParent", 0x4058E, CreateWithParent3, function (T, A, B, C) return out.ET.Entity, A, B, C, System.Boolean, T end },
            { "CreateWithParent", 0x3048E, CreateWithParent2, function (T, A, B) return out.ET.Entity, A, B, System.Boolean, T end },
            { "CreateWithParent", 0x2038E, CreateWithParent1, function (T, A) return out.ET.Entity, A, System.Boolean, T end },
            { "CreateWithParentAndId", 0x3058E, CreateWithParentAndId2, function (T, A, B) return out.ET.Entity, System.Int64, A, B, System.Boolean, T end },
            { "CreateWithParentAndId", 0x2048E, CreateWithParentAndId1, function (T, A) return out.ET.Entity, System.Int64, A, System.Boolean, T end },
            { "CreateWithParentAndId", 0x1038E, CreateWithParentAndId, function (T) return out.ET.Entity, System.Int64, System.Boolean, T end },
            { "CreateWithParentAndId", 0x4068E, CreateWithParentAndId3, function (T, A, B, C) return out.ET.Entity, System.Int64, A, B, C, System.Boolean, T end },
            { "CreateWithParentAndId", 0x5078E, CreateWithParentAndId4, function (T, A, B, C, D) return out.ET.Entity, System.Int64, A, B, C, D, System.Boolean, T end }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
