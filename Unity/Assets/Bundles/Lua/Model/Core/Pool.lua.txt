-- Generated by CSharp.lua Compiler
local System = System
System.namespace("ET", function (namespace)
  namespace.class("Pool_1", function (namespace)
    return function (T)
      local Fetch, Recycle, Clear, __ctor__
      local QueueT = System.Queue(T)
      __ctor__ = function (this)
        this.pool = QueueT()
      end
      Fetch = function (this)
        if #this.pool == 0 then
          return T()
        end

        return this.pool:Dequeue()
      end
      Recycle = function (this, t)
        this.pool:Enqueue(t)
      end
      Clear = function (this)
        this.pool:Clear()
      end
      return {
        Fetch = Fetch,
        Recycle = Recycle,
        Clear = Clear,
        __ctor__ = __ctor__,
        __metadata__ = function (out)
          return {
            fields = {
              { "pool", 0x1, System.Queue(T) }
            },
            methods = {
              { "Clear", 0x6, Clear },
              { "Fetch", 0x86, Fetch, T },
              { "Recycle", 0x106, Recycle, T }
            },
            class = { 0x106, T }
          }
        end
      }
    end
  end)
end)
