-- Generated by CSharp.lua Compiler
local System = System
local SystemIO = System.IO
local SystemInteropServices = System.Runtime.InteropServices
System.namespace("ET", function (namespace)
  namespace.class("ProcessHelper", function (namespace)
    local Run
    Run = function (exe, arguments, workingDirectory, waitExit)
      local default, extern = System.try(function ()
        local redirectStandardOutput = true
        local redirectStandardError = true
        local useShellExecute = false
        if SystemInteropServices.RuntimeInformation.IsOSPlatform(SystemInteropServices.OSPlatform.getWindows()) then
          redirectStandardOutput = false
          redirectStandardError = false
          useShellExecute = true
        end

        if waitExit then
          redirectStandardOutput = true
          redirectStandardError = true
          useShellExecute = false
        end

        local default = System.ProcessStartInfo()
        default:setFileName(exe)
        default:setArguments(arguments)
        default:setCreateNoWindow(true)
        default:setUseShellExecute(useShellExecute)
        default:setWorkingDirectory(workingDirectory)
        default:setRedirectStandardOutput(redirectStandardOutput)
        default:setRedirectStandardError(redirectStandardError)
        local info = default

        local process = System.Process.Start(info)

        if waitExit then
          process:WaitForExit()
          if process:getExitCode() ~= 0 then
            System.throw(System.Exception(process:getStandardOutput():ReadToEnd() .. " " .. process:getStandardError():ReadToEnd()))
          end
        end

        return true, process
      end, function (default)
        local e = default
        System.throw(System.Exception("dir: " .. SystemIO.Path.GetFullPath(workingDirectory) .. ", command: " .. exe .. " " .. arguments, e))
      end)
      if default then
        return extern
      end
    end
    return {
      Run = Run,
      __metadata__ = function (out)
        return {
          methods = {
            { "Run", 0x48E, Run, System.String, System.String, System.String, System.Boolean, System.Process }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
