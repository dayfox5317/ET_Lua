-- Generated by CSharp.lua Compiler
local System = System
System.namespace("ET", function (namespace)
  namespace.class("EnumHelper", function (namespace)
    local EnumIndex, FromString
    EnumIndex = function (value, T)
      local i = 0
      for _, v in System.each(System.Enum.GetValues(System.typeof(T))) do
        if System.cast(System.Int32, v) == value then
          return i
        end
        i = i + 1
      end
      return - 1
    end
    FromString = function (str, T)
      if not System.Enum.IsDefined(System.typeof(T), str) then
        return System.default(T)
      end
      return System.cast(T, System.Enum.Parse(System.typeof(T), str))
    end
    return {
      EnumIndex = EnumIndex,
      FromString = FromString,
      __metadata__ = function (out)
        return {
          methods = {
            { "EnumIndex", 0x1018E, EnumIndex, function (T) return System.Int32, System.Int32 end },
            { "FromString", 0x1018E, FromString, function (T) return System.String, T end }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
