-- Generated by CSharp.lua Compiler
local System = System
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.struct("IdStruct", function (namespace)
    local ToLong, ToString, __ctor1__, __ctor2__
    __ctor1__ = function (this, time, process, value)
      if time == nil then
        return
      end
      this.Process = process
      this.Time = time
      this.Value = value
    end
    __ctor2__ = function (this, id)
      local result = System.toUInt64(id)
      this.Value = System.toUInt16(System.band(result, 65535 --[[UInt16.MaxValue]]))
      result = System.sr(result, 16)
      this.Process = System.toInt32(System.band(result, 262143 --[[IdGenerater.Mask18bit]]))
      result = System.sr(result, 18)
      this.Time = System.toUInt32(result)
    end
    ToLong = function (this)
      local result = 0
      result = System.bor(result, this.Value)
      result = System.bor(result, System.sl(this.Process, 16))
      result = System.bor(result, System.sl(this.Time, 34))
      return System.toInt64(result)
    end
    ToString = function (this)
      return "process: " .. this.Process .. ", time: " .. this.Time .. ", value: " .. this.Value
    end
    return {
      Time = 0,
      Process = 0,
      Value = 0,
      ToLong = ToLong,
      ToString = ToString,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      },
      __metadata__ = function (out)
        return {
          fields = {
            { "Process", 0x6, System.Int32 },
            { "Time", 0x6, System.UInt32 },
            { "Value", 0x6, System.UInt16 }
          },
          methods = {
            { ".ctor", 0x306, __ctor1__, System.UInt32, System.Int32, System.UInt16 },
            { ".ctor", 0x106, __ctor2__, System.Int64 },
            { "ToLong", 0x86, ToLong, System.Int64 },
            { "ToString", 0x86, ToString, System.String }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.struct("InstanceIdStruct", function (namespace)
    local ToLong, ToString, __ctor1__, __ctor2__, __ctor3__
    __ctor1__ = function (this, id)
      if id == nil then
        return
      end
      local result = System.toUInt64(id)
      this.Value = System.toUInt32(System.band(result, 262143 --[[IdGenerater.Mask18bit]]))
      result = System.sr(result, 18)
      this.Process = System.toInt32(System.band(result, 262143 --[[IdGenerater.Mask18bit]]))
      result = System.sr(result, 18)
      this.Time = System.toUInt32(result)
    end
    __ctor2__ = function (this, time, process, value)
      this.Time = time
      this.Process = process
      this.Value = value
    end
    __ctor3__ = function (this, process, value)
      this.Time = 0
      this.Process = process
      this.Value = value
    end
    ToLong = function (this)
      local result = 0
      result = System.bor(result, this.Value)
      result = System.bor(result, System.sl(this.Process, 18))
      result = System.bor(result, System.sl(this.Time, 36))
      return System.toInt64(result)
    end
    ToString = function (this)
      return "process: " .. this.Process .. ", value: " .. this.Value .. " time: " .. this.Time
    end
    return {
      Time = 0,
      Process = 0,
      Value = 0,
      ToLong = ToLong,
      ToString = ToString,
      __ctor__ = {
        __ctor1__,
        __ctor2__,
        __ctor3__
      },
      __metadata__ = function (out)
        return {
          fields = {
            { "Process", 0x6, System.Int32 },
            { "Time", 0x6, System.UInt32 },
            { "Value", 0x6, System.UInt32 }
          },
          methods = {
            { ".ctor", 0x106, __ctor1__, System.Int64 },
            { ".ctor", 0x306, __ctor2__, System.UInt32, System.Int32, System.UInt32 },
            { ".ctor", 0x206, __ctor3__, System.Int32, System.UInt32 },
            { "ToLong", 0x86, ToLong, System.Int64 },
            { "ToString", 0x86, ToString, System.String }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.struct("UnitIdStruct", function (namespace)
    local ToLong, ToString, GetUnitZone, __ctor__
    __ctor__ = function (this, zone, process, time, value)
      if zone == nil then
        return
      end
      this.Time = time
      this.ProcessMode = System.toByte(System.mod(process, 256))
      this.Value = value
      this.Zone = System.toUInt16(zone)
    end
    ToLong = function (this)
      local result = 0

      result = System.bor(result, 9223372036854775808 --[[1ul << 63]])
      -- 最高位变成1，暂时让它跟普通id区分一下，正式版删除

      result = System.bor(result, this.Value)
      result = System.bor(result, System.sl(this.ProcessMode, 16))
      result = System.bor(result, System.sl(this.Zone, 24))
      result = System.bor(result, System.sl(this.Time, 34))
      return System.toInt64(result)
    end
    ToString = function (this)
      return "ProcessMode: " .. this.ProcessMode .. ", value: " .. this.Value .. " time: " .. this.Time
    end
    GetUnitZone = function (unitId)
      local v = System.toInt32(System.band((System.sr(unitId, 24)), 0x03ff))
      -- 取出10bit
      return v
    end
    return {
      Time = 0,
      Zone = 0,
      ProcessMode = 0,
      Value = 0,
      ToLong = ToLong,
      ToString = ToString,
      GetUnitZone = GetUnitZone,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "ProcessMode", 0x6, System.Byte },
            { "Time", 0x6, System.UInt32 },
            { "Value", 0x6, System.UInt16 },
            { "Zone", 0x6, System.UInt16 }
          },
          methods = {
            { ".ctor", 0x406, __ctor__, System.Int32, System.Int32, System.UInt32, System.UInt16 },
            { "GetUnitZone", 0x18E, GetUnitZone, System.Int64, System.Int32 },
            { "ToLong", 0x86, ToLong, System.Int64 },
            { "ToString", 0x86, ToString, System.String }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.class("IdGenerater", function (namespace)
    local Dispose, TimeSince2020, TimeSinceThisYear, GenerateInstanceId, GenerateId, GenerateUnitId, class, static, 
    __ctor__
    static = function (this)
      this.Instance = class()
    end
    __ctor__ = function (this)
      local epoch1970 = System.div(System.DateTime(1970, 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc):getTicks(), 10000)
      this.epoch2020 = System.div(System.DateTime(2020, 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc):getTicks(), 10000) - epoch1970
      this.instanceIdEpoch = System.div(System.DateTime(System.DateTime.getNow():getYear(), 1, 1, 0, 0, 0, 0, System.DateTimeKind.Utc):getTicks(), 10000) - epoch1970
    end
    Dispose = function (this)
      this.epoch2020 = 0
      this.instanceIdEpoch = 0
      this.value = 0
    end
    TimeSince2020 = function (this)
      return System.toUInt32(System.div((ET.Game.getTimeInfo().FrameTime - this.epoch2020), 1000))
    end
    TimeSinceThisYear = function (this)
      return System.toUInt32(System.div((ET.Game.getTimeInfo().FrameTime - this.instanceIdEpoch), 1000))
    end
    GenerateInstanceId = function (this)
      local time = TimeSinceThisYear(this)

      if time == this.lastInstanceIdTime then
        this.instanceIdThisSecCount = this.instanceIdThisSecCount + 1
      else
        this.lastInstanceIdTime = time
        this.instanceIdThisSecCount = 1
      end
      if this.instanceIdThisSecCount > 262142 --[[IdGenerater.Mask18bit - 1]] then
        ET.Log.Error("instanceid count per sec overflow: " .. this.instanceIdThisSecCount)
      end


      local default = this.instanceIdValue + 1
      this.instanceIdValue = default
      if default > 262142 --[[IdGenerater.Mask18bit - 1]] then
        this.instanceIdValue = 0
      end
      local instanceIdStruct = System.new(ET.InstanceIdStruct, 2, time, ET.Game.Options.Process, this.instanceIdValue)
      return instanceIdStruct:ToLong()
    end
    GenerateId = function (this)
      local time = TimeSince2020(this)

      if time == this.lastIdTime then
        this.idThisSecCount = this.idThisSecCount + 1
      else
        this.lastIdTime = time
        this.idThisSecCount = 1
      end
      if this.idThisSecCount == 65535 --[[UInt16.MaxValue]] then
        ET.Log.Error("id count per sec overflow: " .. this.idThisSecCount)
      end


      local default = this.value + 1
      this.value = default
      if default > 65534 --[[ushort.MaxValue - 1]] then
        this.value = 0
      end
      local idStruct = ET.IdStruct(time, ET.Game.Options.Process, this.value)
      return idStruct:ToLong()
    end
    GenerateUnitId = function (this, zone)
      if zone > 1024 --[[IdGenerater.MaxZone]] then
        System.throw(System.Exception("zone > MaxZone: " .. zone))
      end
      local time = TimeSince2020(this)


      if time == this.lastUnitIdTime then
        this.unitIdThisSecCount = this.unitIdThisSecCount + 1
      else
        this.lastUnitIdTime = time
        this.unitIdThisSecCount = 1
      end
      if this.unitIdThisSecCount == 65535 --[[UInt16.MaxValue]] then
        ET.Log.Error("unitid count per sec overflow: " .. this.unitIdThisSecCount)
      end

      local default = this.unitIdValue + 1
      this.unitIdValue = default
      if default > 65534 --[[ushort.MaxValue - 1]] then
        this.unitIdValue = 0
      end

      local unitIdStruct = ET.UnitIdStruct(zone, ET.Game.Options.Process, time, this.unitIdValue)
      return unitIdStruct:ToLong()
    end
    class = {
      base = function (out)
        return {
          System.IDisposable
        }
      end,
      epoch2020 = 0,
      value = 0,
      lastIdTime = 0,
      idThisSecCount = 0,
      instanceIdEpoch = 0,
      instanceIdValue = 0,
      lastInstanceIdTime = 0,
      instanceIdThisSecCount = 0,
      unitIdValue = 0,
      lastUnitIdTime = 0,
      unitIdThisSecCount = 0,
      Dispose = Dispose,
      GenerateInstanceId = GenerateInstanceId,
      GenerateId = GenerateId,
      GenerateUnitId = GenerateUnitId,
      static = static,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "epoch2020", 0x1, System.Int64 },
            { "idThisSecCount", 0x1, System.UInt16 },
            { "Instance", 0xE, class },
            { "instanceIdEpoch", 0x1, System.Int64 },
            { "instanceIdThisSecCount", 0x1, System.UInt32 },
            { "instanceIdValue", 0x1, System.UInt32 },
            { "lastIdTime", 0x1, System.UInt32 },
            { "lastInstanceIdTime", 0x1, System.UInt32 },
            { "lastUnitIdTime", 0x1, System.UInt32 },
            { "unitIdThisSecCount", 0x1, System.UInt16 },
            { "unitIdValue", 0x1, System.UInt16 },
            { "value", 0x1, System.UInt16 }
          },
          methods = {
            { ".ctor", 0x6, nil },
            { "Dispose", 0x6, Dispose },
            { "GenerateId", 0x86, GenerateId, System.Int64 },
            { "GenerateInstanceId", 0x86, GenerateInstanceId, System.Int64 },
            { "GenerateUnitId", 0x186, GenerateUnitId, System.Int32, System.Int64 },
            { "TimeSince2020", 0x81, TimeSince2020, System.UInt32 },
            { "TimeSinceThisYear", 0x81, TimeSinceThisYear, System.UInt32 }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
