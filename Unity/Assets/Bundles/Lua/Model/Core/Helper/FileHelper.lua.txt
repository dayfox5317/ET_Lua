-- Generated by CSharp.lua Compiler
local System = System
local SystemIO = System.IO
System.namespace("ET", function (namespace)
  namespace.class("FileHelper", function (namespace)
    local GetAllFiles, CleanDirectory, CopyDirectory
    GetAllFiles = function (files, dir)
      local fls = SystemIO.Directory.GetFiles(dir)
      for _, fl in System.each(fls) do
        files:Add(fl)
      end

      local subDirs = SystemIO.Directory.GetDirectories(dir)
      for _, subDir in System.each(subDirs) do
        GetAllFiles(files, subDir)
      end
    end
    CleanDirectory = function (dir)
      for _, subdir in System.each(SystemIO.Directory.GetDirectories(dir)) do
        SystemIO.Directory.Delete(subdir, true)
      end

      for _, subFile in System.each(SystemIO.Directory.GetFiles(dir)) do
        SystemIO.File.Delete(subFile)
      end
    end
    CopyDirectory = function (srcDir, tgtDir)
      local source = SystemIO.DirectoryInfo(srcDir)
      local target = SystemIO.DirectoryInfo(tgtDir)

      if target:getFullName():StartsWith(source:getFullName(), System.StringComparison.CurrentCultureIgnoreCase) then
        System.throw(System.Exception("父目录不能拷贝到子目录！"))
      end

      if not source:getExists() then
        return
      end

      if not target:getExists() then
        target:Create()
      end

      local files = source:GetFiles()

      for i = 0, #files - 1 do
        SystemIO.File.Copy(files:get(i):getFullName(), SystemIO.Path.Combine(target:getFullName(), files:get(i):getName()), true)
      end

      local dirs = source:GetDirectories()

      for j = 0, #dirs - 1 do
        CopyDirectory(dirs:get(j):getFullName(), SystemIO.Path.Combine(target:getFullName(), dirs:get(j):getName()))
      end
    end
    return {
      GetAllFiles = GetAllFiles,
      CleanDirectory = CleanDirectory,
      CopyDirectory = CopyDirectory,
      __metadata__ = function (out)
        return {
          methods = {
            { "CleanDirectory", 0x10E, CleanDirectory, System.String },
            { "CopyDirectory", 0x20E, CopyDirectory, System.String, System.String },
            { "GetAllFiles", 0x20E, GetAllFiles, System.List(System.String), System.String }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
