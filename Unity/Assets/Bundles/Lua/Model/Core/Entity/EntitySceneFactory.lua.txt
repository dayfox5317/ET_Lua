-- Generated by CSharp.lua Compiler
local System = System
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("EntitySceneFactory", function (namespace)
    local CreateScene, CreateScene1, CreateScene2
    CreateScene = function (id, instanceId, zone, sceneType, name, parent)
      local scene = System.new(ET.Scene, 2, id, instanceId, zone, sceneType, name)
      scene:setIsRegister(true)
      scene:setParent1(parent)
      scene:setDomain1(scene)

      return scene
    end
    CreateScene1 = function (instanceId, zone, sceneType, name, parent)
      local scene = ET.Scene(instanceId, zone, sceneType, name)
      scene:setIsRegister(true)
      scene:setParent1(parent)
      scene:setDomain1(scene)

      return scene
    end
    CreateScene2 = function (zone, sceneType, name, parent)
      local instanceId = ET.IdGenerater.Instance:GenerateInstanceId()
      local scene = ET.Scene(instanceId, zone, sceneType, name)
      scene:setIsRegister(true)
      scene:setParent1(parent)
      scene:setDomain1(scene)

      return scene
    end
    return {
      CreateScene = CreateScene,
      CreateScene1 = CreateScene1,
      CreateScene2 = CreateScene2,
      __metadata__ = function (out)
        return {
          methods = {
            { "CreateScene", 0x68E, CreateScene, System.Int64, System.Int64, System.Int32, out.ET.SceneType, System.String, out.ET.Entity, out.ET.Scene },
            { "CreateScene", 0x58E, CreateScene1, System.Int64, System.Int32, out.ET.SceneType, System.String, out.ET.Entity, out.ET.Scene },
            { "CreateScene", 0x48E, CreateScene2, System.Int32, out.ET.SceneType, System.String, out.ET.Entity, out.ET.Scene }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
