-- Generated by CSharp.lua Compiler
local System = System
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("Scene", function (namespace)
    local Dispose, Get, getDomain1, setDomain1, getParent1, setParent1, class, internal, 
    __ctor1__, __ctor2__
    internal = function (this)
      this.SceneType = ET.SceneType.Process
    end
    __ctor1__ = function (this, id, zone, sceneType, name)
      internal(this)
      System.base(this).__ctor__(this)
      this.Id = id
      this.InstanceId = id
      this.Zone = zone
      this.SceneType = sceneType
      this.Name = name
      this:setIsCreate(true)

      ET.Log.Info("scene create: " .. this.SceneType:EnumToString(ET.SceneType) .. " " .. this.Name .. " " .. this.Id .. " " .. this.InstanceId .. " " .. this.Zone)
    end
    __ctor2__ = function (this, id, instanceId, zone, sceneType, name)
      internal(this)
      System.base(this).__ctor__(this)
      this.Id = id
      this.InstanceId = instanceId
      this.Zone = zone
      this.SceneType = sceneType
      this.Name = name
      this:setIsCreate(true)

      ET.Log.Info("scene create: " .. this.SceneType:EnumToString(ET.SceneType) .. " " .. this.Name .. " " .. this.Id .. " " .. this.InstanceId .. " " .. this.Zone)
    end
    Dispose = function (this)
      System.base(this).Dispose(this)

      ET.Log.Info("scene dispose: " .. this.SceneType:EnumToString(ET.SceneType) .. " " .. this.Name .. " " .. this.Id .. " " .. this.InstanceId .. " " .. this.Zone)
    end
    Get = function (this, id)
      if this:getChildren() == nil then
        return nil
      end

      local default, entity = this:getChildren():TryGetValue(id)
      if not default then
        return nil
      end

      return System.as(entity, class)
    end
    getDomain1 = function (this)
      return this.domain
    end
    setDomain1 = function (this, value)
      this.domain = value
    end
    getParent1 = function (this)
      return this.parent
    end
    setParent1 = function (this, value)
      if value == nil then
        this.parent = this
        return
      end

      this.parent = value
      this.parent:getChildren():AddKeyValue(this.Id, this)
    end
    class = {
      base = function (out)
        return {
          out.ET.Entity
        }
      end,
      Zone = 0,
      Dispose = Dispose,
      Get = Get,
      getDomain1 = getDomain1,
      setDomain1 = setDomain1,
      getParent1 = getParent1,
      setParent1 = setParent1,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      },
      __metadata__ = function (out)
        return {
          properties = {
            { "Domain", 0x106, out.ET.Entity, getDomain1, setDomain1 },
            { "Name", 0x6, System.String },
            { "Parent", 0x106, out.ET.Entity, getParent1, setParent1 },
            { "SceneType", 0x6, out.ET.SceneType },
            { "Zone", 0x6, System.Int32 }
          },
          methods = {
            { ".ctor", 0x406, __ctor1__, System.Int64, System.Int32, out.ET.SceneType, System.String },
            { ".ctor", 0x506, __ctor2__, System.Int64, System.Int64, System.Int32, out.ET.SceneType, System.String },
            { "Dispose", 0x6, Dispose },
            { "Get", 0x186, Get, System.Int64, class }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
