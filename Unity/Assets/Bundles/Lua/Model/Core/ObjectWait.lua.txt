-- Generated by CSharp.lua Compiler
local System = System
local Linq = System.Linq.Enumerable
local DictTypeObject = System.Dictionary(System.Type, System.Object)
local ET
local ETObjectWait
System.import(function (out)
  ET = out.ET
  ETObjectWait = ET.ObjectWait
end)
System.namespace("ET", function (namespace)
  namespace.class("WaitTypeError", function (namespace)
    return {
      __metadata__ = function (out)
        return {
          class = { 0xE }
        }
      end
    }
  end)

  namespace.interface("IWaitType", function ()
    return {
      __metadata__ = function (out)
        return {
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.class("ObjectWaitAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      self.tcss:Clear()
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.ObjectWait)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          methods = {
            { "Awake", 0x106, Awake, out.ET.ObjectWait }
          },
          class = { 0x6, out.ET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("ObjectWaitDestroySystem", function (namespace)
    local Destroy
    Destroy = function (this, self)
      for _, v in System.each(Linq.ToArray(self.tcss:getValues())) do
        (System.cast(ETObjectWait.IDestroyRun, v)):SetResult()
      end
    end
    return {
      base = function (out)
        return {
          out.ET.DestroySystem_1(out.ET.ObjectWait)
        }
      end,
      Destroy = Destroy,
      __metadata__ = function (out)
        return {
          methods = {
            { "Destroy", 0x106, Destroy, out.ET.ObjectWait }
          },
          class = { 0x6, out.ET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("ObjectWait", function (namespace)
    local Wait, Wait1, Notify, __ctor__
    namespace.interface("IDestroyRun", function ()
      return {
        __metadata__ = function (out)
          return {
            class = { 0x6 }
          }
        end
      }
    end)
    namespace.class("ResultCallback_1", function (namespace)
      return function (K)
        local getTask, SetResult1, SetResult, __ctor1__, __ctor2__
        local ETTask_1K = ET.ETTask_1(K)
        __ctor1__ = function (this)
          this.tcs = ETTask_1K.Create(true)
        end
        __ctor2__ = function (this, timer)
          this.timer = timer
          this.tcs = ETTask_1K.Create(true)
        end
        getTask = function (this)
          return this.tcs
        end
        SetResult1 = function (this, k)
          ET.TimerComponent.Instance:Remove1(this.timer)
          this.tcs:SetResult(k)
        end
        SetResult = function (this)
          ET.TimerComponent.Instance:Remove1(this.timer)
          local default = K()
          default:setError(1 --[[WaitTypeError.Destroy]])
          this.tcs:SetResult(default)
        end
        return {
          base = function (out)
            return {
              out.ET.ObjectWait.IDestroyRun
            }
          end,
          timer = 0,
          getTask = getTask,
          SetResult1 = SetResult1,
          SetResult = SetResult,
          __ctor__ = {
            __ctor1__,
            __ctor2__
          },
          __metadata__ = function (out)
            return {
              fields = {
                { "tcs", 0x1, out.ET.ETTask_1(K) },
                { "timer", 0x1, System.Int64 }
              },
              methods = {
                { ".ctor", 0x6, __ctor1__ },
                { ".ctor", 0x106, __ctor2__, System.Int64 },
                { "SetResult", 0x106, SetResult1, K },
                { "SetResult", 0x6, SetResult }
              },
              properties = {
                { "Task", 0x206, out.ET.ETTask_1(K), getTask }
              },
              class = { 0x106, K }
            }
          end
        }
      end
    end)
    __ctor__ = function (this)
      this.tcss = DictTypeObject()
      ET.Entity.__ctor__(this)
    end
    Wait = function (this, cancellationToken, T)
      return System.async(function (async, this, cancellationToken, T)
        local tcs = ETObjectWait.ResultCallback_1(T)()
        local type = System.typeof(T)
        this.tcss:AddKeyValue(type, tcs)

        local function CancelAction() 
          local default = T()
          default:setError(2 --[[WaitTypeError.Cancel]])
          Notify(this, default, T)
        end

        local ret
        System.try(function ()
          local default = cancellationToken
          if default ~= nil then
            default:Add(CancelAction)
          end
          ret = async:Await(tcs:getTask())
        end, nil, function ()
          local default = cancellationToken
          if default ~= nil then
            default:Remove(CancelAction)
          end
        end)
        return ret:__clone__()
      end, nil, this, cancellationToken, T)
    end
    Wait1 = function (this, timeout, cancellationToken, T)
      return System.async(function (async, this, timeout, cancellationToken, T)
        local timerId = ET.TimerComponent.Instance:NewOnceTimer(ET.TimeHelper.ServerNow() + timeout, function ()
          local default = T()
          default:setError(3 --[[WaitTypeError.Timeout]])
          Notify(this, default, T)
        end)

        local tcs = System.new(ETObjectWait.ResultCallback_1(T), 2, timerId)
        this.tcss:AddKeyValue(System.typeof(T), tcs)

        local function CancelAction() 
          local default = T()
          default:setError(2 --[[WaitTypeError.Cancel]])
          Notify(this, default, T)
        end

        local ret
        System.try(function ()
          local default = cancellationToken
          if default ~= nil then
            default:Add(CancelAction)
          end
          ret = async:Await(tcs:getTask())
        end, nil, function ()
          local default = cancellationToken
          if default ~= nil then
            default:Remove(CancelAction)
          end
        end)
        return ret:__clone__()
      end, nil, this, timeout, cancellationToken, T)
    end
    Notify = function (this, obj, T)
      local type = System.typeof(T)
      local default, tcs = this.tcss:TryGetValue(type)
      if not default then
        return
      end

      this.tcss:RemoveKey(type);
      (System.cast(ETObjectWait.ResultCallback_1(T), tcs)):SetResult1(obj:__clone__())
    end
    return {
      base = function (out)
        return {
          out.ET.Entity
        }
      end,
      Wait = Wait,
      Wait1 = Wait1,
      Notify = Notify,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "tcss", 0x6, System.Dictionary(System.Type, System.Object) }
          },
          methods = {
            { "Notify", 0x10106, Notify, function (T) return T end },
            { "Wait", 0x10286, Wait1, function (T) return System.Int32, out.ET.ETCancellationToken, out.ET.ETTask_1(T) end },
            { "Wait", 0x10186, Wait, function (T) return out.ET.ETCancellationToken, out.ET.ETTask_1(T) end }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
