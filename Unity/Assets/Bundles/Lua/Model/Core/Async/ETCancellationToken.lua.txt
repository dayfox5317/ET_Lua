-- Generated by CSharp.lua Compiler
local System = System
local HashSetDelegate = System.HashSet(System.Delegate)
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("ETCancellationToken", function (namespace)
    local Add, Remove, IsCancel, Cancel, Invoke, CancelAfter, __ctor__
    __ctor__ = function (this)
      this.actions = HashSetDelegate()
    end
    Add = function (this, callback)
      -- 如果action是null，绝对不能添加,要抛异常，说明有协程泄漏
      this.actions:Add(callback)
    end
    Remove = function (this, callback)
      local default = this.actions
      if default ~= nil then
        default:Remove(callback)
      end
    end
    IsCancel = function (this)
      return this.actions == nil
    end
    Cancel = function (this)
      if this.actions == nil then
        return
      end

      Invoke(this)
    end
    Invoke = function (this)
      local runActions = this.actions
      this.actions = nil
      System.try(function ()
        for _, action in System.each(runActions) do
          action()
        end
      end, function (default)
        local e = default
        ET.Log.Error1(e)
      end)
    end
    CancelAfter = function (this, afterTimeCancel)
      return System.async(function (async, this, afterTimeCancel)
        if this.actions == nil then
          return
        end

        async:Await(ET.TimerComponent.Instance:WaitAsync(afterTimeCancel))

        Invoke(this)
      end, nil, this, afterTimeCancel)
    end
    return {
      Add = Add,
      Remove = Remove,
      IsCancel = IsCancel,
      Cancel = Cancel,
      CancelAfter = CancelAfter,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "actions", 0x1, System.HashSet(System.Delegate) }
          },
          methods = {
            { "Add", 0x106, Add, System.Delegate },
            { "Cancel", 0x6, Cancel },
            { "CancelAfter", 0x186, CancelAfter, System.Int64, out.ET.ETVoid },
            { "Invoke", 0x1, Invoke },
            { "IsCancel", 0x86, IsCancel, System.Boolean },
            { "Remove", 0x106, Remove, System.Delegate }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
