-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("ListComponent_1", function (namespace)
    return function (T)
      local Create, Dispose, class, __ctor__
      local ListT = System.List(T)
      __ctor__ = function (this)
        this.List = ListT()
        ET.Object.__ctor__(this)
      end
      Create = function ()
        local listComponent = ET.ObjectPool.getInstance():Fetch1(class)
        listComponent.isDispose = false
        return listComponent
      end
      Dispose = function (this)
        if this.isDispose then
          return
        end

        this.isDispose = true

        ET.Object.Dispose(this)

        this.List:Clear()
        ET.ObjectPool.getInstance():Recycle(this)
      end
      class = {
        base = function (out)
          return {
            out.ET.Object
          }
        end,
        isDispose = false,
        Create = Create,
        Dispose = Dispose,
        __ctor__ = __ctor__,
        __metadata__ = function (out)
          return {
            fields = {
              { "isDispose", 0x1, System.Boolean }
            },
            methods = {
              { "Create", 0x8E, Create, class },
              { "Dispose", 0x6, Dispose }
            },
            properties = {
              { "List", 0x6, System.List(T) }
            },
            class = { 0x106, T }
          }
        end
      }
      return class
    end
  end)

  namespace.class("ListComponentDisposeChildren_1", function (namespace)
    return function (T)
      local Create, Dispose, class, __ctor__
      local ListT = System.List(T)
      __ctor__ = function (this)
        this.List = ListT()
        ET.Object.__ctor__(this)
      end
      Create = function ()
        local listComponent = ET.ObjectPool.getInstance():Fetch1(class)
        listComponent.isDispose = false
        return listComponent
      end
      Dispose = function (this)
        if this.isDispose then
          return
        end

        this.isDispose = true

        ET.Object.Dispose(this)

        for _, entity in System.each(this.List) do
          entity:Dispose()
        end

        this.List:Clear()

        ET.ObjectPool.getInstance():Recycle(this)
      end
      class = {
        base = function (out)
          return {
            out.ET.Object
          }
        end,
        isDispose = false,
        Create = Create,
        Dispose = Dispose,
        __ctor__ = __ctor__,
        __metadata__ = function (out)
          return {
            fields = {
              { "isDispose", 0x1, System.Boolean },
              { "List", 0x6, System.List(T) }
            },
            methods = {
              { "Create", 0x8E, Create, class },
              { "Dispose", 0x6, Dispose }
            },
            class = { 0x106, T }
          }
        end
      }
      return class
    end
  end)
end)
