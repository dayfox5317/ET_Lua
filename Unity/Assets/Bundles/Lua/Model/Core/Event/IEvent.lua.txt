-- Generated by CSharp.lua Compiler
local System = System
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.interface("IEvent", function ()
    return {
      __metadata__ = function (out)
        return {
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.class("AEvent_1", function (namespace)
    return function (A)
      local GetEventType, Handle
      GetEventType = function (this)
        return System.typeof(A)
      end
      Handle = function (this, a)
        return System.async(function (async, this, a)
          System.try(function ()
            async:Await(this:Run(a:__clone__()))
          end, function (default)
            local e = default
            ET.Log.Error1(e)
          end)
        end, nil, this, a)
      end
      return {
        base = function (out)
          return {
            out.ET.IEvent
          }
        end,
        GetEventType = GetEventType,
        Handle = Handle,
        __metadata__ = function (out)
          return {
            methods = {
              { "GetEventType", 0x86, GetEventType, System.Type },
              { "Handle", 0x186, Handle, A, out.ET.ETTask }
            },
            class = { 0x106, A, out.ET.EventAttribute() }
          }
        end
      }
    end
  end)
end)
