-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local UnityEngine = UnityEngine
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("OperaComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      self.mapMask = UnityEngine.LayerMask.GetMask("Map")
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.OperaComponent)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          methods = {
            { "Awake", 0x106, Awake, out.ET.OperaComponent }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.class("OperaComponentUpdateSystem", function (namespace)
    local Update
    Update = function (this, self)
      ET.OperaComponentSystem.Update(self)
    end
    return {
      base = function (out)
        return {
          out.ET.UpdateSystem_1(out.ET.OperaComponent)
        }
      end,
      Update = Update,
      __metadata__ = function (out)
        return {
          methods = {
            { "Update", 0x106, Update, out.ET.OperaComponent }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.class("OperaComponentSystem", function (namespace)
    local Update
    Update = function (self)
      if UnityEngine.Input.GetMouseButtonDown(1) then
        local ray = UnityEngine.Camera.getmain():ScreenPointToRay(UnityEngine.Input.getmousePosition())
        local hit
        local default
        default, hit = UnityEngine.Physics.Raycast(ray, nil, 1000, self.mapMask)
        if default then
          self.ClickPoint = hit:getpoint()
          self.frameClickMap.X = self.ClickPoint.x
          self.frameClickMap.Y = self.ClickPoint.y
          self.frameClickMap.Z = self.ClickPoint.z
          ET.SceneHelper.DomainScene(self):GetComponent(ET.SessionComponent).Session:Send(self.frameClickMap)
        end
      end
    end
    return {
      Update = Update,
      __metadata__ = function (out)
        return {
          methods = {
            { "Update", 0x10E, Update, out.ET.OperaComponent }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
