-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ETEventType = ET.EventType
System.namespace("ET", function (namespace)
  namespace.class("AppStart_Init", function (namespace)
    local Run
    Run = function (this, args)
      return System.async(function (async, this, args)
        ET.Game.getScene():AddComponent2(ET.TimerComponent)
        ET.Game.getScene():AddComponent2(ET.CoroutineLockComponent)

        -- 加载配置
        ET.Game.getScene():AddComponent2(ET.ResourcesComponent)
        --  ResourcesComponent.Instance.LoadBundle("config.unity3d");
        ET.Game.getScene():AddComponent2(ET.ConfigComponent)

        ET.ConfigComponentSystem.LoadAsync(ET.ConfigComponent.Instance):Coroutine()


        --  ResourcesComponent.Instance.UnloadBundle("config.unity3d");

        ET.Game.getScene():AddComponent2(ET.OpcodeTypeComponent)
        ET.Game.getScene():AddComponent2(ET.MessageDispatcherComponent)

        ET.Game.getScene():AddComponent2(ET.NetThreadComponent)

        ET.Game.getScene():AddComponent2(ET.ZoneSceneManagerComponent)

        ET.Game.getScene():AddComponent2(ET.GlobalComponent)

        ET.Game.getScene():AddComponent2(ET.AIDispatcherComponent)


        --    Game.Scene.AddComponent<ImGuiRenderComponent>();

        --  ResourcesComponent.Instance.LoadBundle("unit.unity3d");
        local zoneScene = async:Await(ET.SceneFactory.CreateZoneScene(1, "Game", ET.Game.getScene()))

        local default = ETEventType.AppStartInitFinish()
        default.ZoneScene = zoneScene
        async:Await(ET.Game.getEventSystem():Publish(default, ETEventType.AppStartInitFinish))
      end, nil, this, args)
    end
    return {
      base = function (out)
        return {
          out.ET.AEvent_1(out.ET.EventType.AppStart)
        }
      end,
      Run = Run,
      __metadata__ = function (out)
        return {
          methods = {
            { "Run", 0x183, Run, out.ET.EventType.AppStart, out.ET.ETTask }
          },
          class = { 0x6, out.ET.EventAttribute() }
        }
      end
    }
  end)
end)
