-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local UnityEngine = UnityEngine
System.namespace("ET", function (namespace)
  namespace.class("AfterUnitCreate_CreateUnitView", function (namespace)
    local Run
    Run = function (this, args)
      return System.async(function (async, this, args)
        -- Unit View层
        -- 这里可以改成异步加载，demo就不搞了
        local bundleGameObject = System.cast(UnityEngine.GameObject, ET.ResourcesComponent.Instance:LoadAsset1("Assets/Bundles/Unit/Unit.prefab", System.typeof(UnityEngine.GameObject)))
        -- ..GetAsset("Unit.unity3d", "Unit");
        local referenceCollector = System.as(bundleGameObject:GetComponent(System.typeof(ReferenceCollector)), ReferenceCollector)
        local prefab = referenceCollector:GetObject("Skeleton")

        local go = System.as(UnityEngine.Object.Instantiate(prefab), UnityEngine.GameObject)

        go:gettransform():SetParent(ET.GlobalComponent.Instance.Unit)
        go:gettransform():setposition(args.Unit:getPosition())
        args.Unit:AddComponent2(ET.GameObjectComponent).GameObject = go
        args.Unit:AddComponent2(ET.AnimatorComponent)
        async:Await(ET.ETTask.getCompletedTask())
      end, nil, this, args)
    end
    return {
      base = function (out)
        return {
          out.ET.AEvent_1(out.ET.EventType.AfterUnitCreate)
        }
      end,
      Run = Run,
      __metadata__ = function (out)
        return {
          methods = {
            { "Run", 0x183, Run, out.ET.EventType.AfterUnitCreate, out.ET.ETTask }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
