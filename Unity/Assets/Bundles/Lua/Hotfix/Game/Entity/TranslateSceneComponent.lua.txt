-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
System.namespace("ET", function (namespace)
  namespace.class("TranslateSceneComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      self:Awake()
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.TranslateSceneComponent)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          methods = {
            { "Awake", 0x106, Awake, out.ET.TranslateSceneComponent }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.class("TranslateSceneComponentUpdateSsytem", function (namespace)
    local Update
    Update = function (this, self)
      self:Update()
    end
    return {
      base = function (out)
        return {
          out.ET.UpdateSystem_1(out.ET.TranslateSceneComponent)
        }
      end,
      Update = Update,
      __metadata__ = function (out)
        return {
          methods = {
            { "Update", 0x106, Update, out.ET.TranslateSceneComponent }
          },
          class = { 0x6 }
        }
      end
    }
  end)

  namespace.class("TranslateSceneComponent", function (namespace)
    local Awake, Begin, AutoEnd, End, Update, class, __ctor__
    __ctor__ = function (this)
      ET.Entity.__ctor__(this)
    end
    Awake = function (this)
      class.Instance = this
      this.isShowing = false
      --isEnd = false;
      this.isAutoEnd = true
    end
    Begin = function (this, isAutoEnd)
      if this.isShowing then
        return
      end
      if not isAutoEnd then
        this.isAutoEnd = isAutoEnd
      end
      --if (ui == null)
      --{
      --    ui = FUI_Loading.CreateInstance(FUIComponent.Instance);
      --    ui.Name = FUIPackage.Common_Loading;
      --    ui.self.sortingOrder = 9999;
      --    ui.MakeFullScreen();
      --}
      --progressAddAmount = 0.5f;
      --isShowing = true;
      --isEnd = false;
      --progress = 0;
      --ui.m_progress.value = 0;
      --FUIComponent.Instance.Add(ui, true);
    end
    AutoEnd = function (this)
      if not this.isAutoEnd then
        return
      end
      this.isShowing = false
      --isEnd = true;
    end
    End = function (this)
      this.isAutoEnd = true
      this.isShowing = false
      --isEnd = true;
    end
    Update = function (this)
      --if (isEnd)
      --{
      --    if (progress >= 100)
      --    {
      --        isEnd = false;
      --        ui.RemoveSelfNoDispose();
      --        return;
      --    }
      --    progress += UnityEngine.Random.Range(1.5f, 3f);
      --    if (progress >= 100) progress = 100;
      --    ui.m_progress.value = progress;
      --}
      --if (isShowing)
      --{
      --    if (progress > 99)
      --    {
      --        progress = 99;
      --        return;
      --    }
      --    if (progress <= 70)
      --    {
      --        progressAddAmount = UnityEngine.Random.Range(0.8f, 1.5f);
      --    }
      --    else if (progress >= 70 && progress <= 90)
      --    {
      --        progressAddAmount = UnityEngine.Random.Range(0.1f, 0.15f);
      --    }
      --    else if (progress >= 90)
      --    {
      --        progressAddAmount = UnityEngine.Random.Range(0.2f, 0.8f);
      --    }
      --    progress += progressAddAmount;
      --    ui.m_progress.value = progress;
      --}
    end
    class = {
      base = function (out)
        return {
          out.ET.Entity
        }
      end,
      isShowing = false,
      isAutoEnd = false,
      progress = 0,
      Awake = Awake,
      Begin = Begin,
      AutoEnd = AutoEnd,
      End = End,
      Update = Update,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "Instance", 0xE, class }
          },
          fields = {
            { "isAutoEnd", 0x1, System.Boolean },
            { "isShowing", 0x1, System.Boolean },
            { "progress", 0x1, System.Single }
          },
          methods = {
            { "AutoEnd", 0x6, AutoEnd },
            { "Awake", 0x4, Awake },
            { "Begin", 0x106, Begin, System.Boolean },
            { "End", 0x6, End },
            { "Update", 0x4, Update }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
