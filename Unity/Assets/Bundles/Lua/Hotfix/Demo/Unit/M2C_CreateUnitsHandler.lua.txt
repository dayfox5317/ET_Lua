-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("M2C_CreateUnitsHandler", function (namespace)
    local Run
    Run = function (this, session, message)
      return System.async(function (async, this, session, message)
        ET.Log.Debug("我收到了 创建Unit的服务器消息")

        local unitComponent = session:getDomain():GetComponent(ET.UnitComponent)

        for _, unitInfo in System.each(message.Units) do
          local continue
          repeat
            if ET.UnitComponentSystem.Get(unitComponent, unitInfo.UnitId) ~= nil then
              continue = true
              break
            end
            local unit = ET.UnitFactory.Create(session:getDomain(), unitInfo)
            continue = true
          until 1
          if not continue then
            break
          end
        end

        async:Await(ET.ETTask.getCompletedTask())
      end, nil, this, session, message)
    end
    return {
      base = function (out)
        return {
          out.ET.AMHandler_1(out.ET.M2C_CreateUnits)
        }
      end,
      Run = Run,
      __metadata__ = function (out)
        return {
          methods = {
            { "Run", 0x283, Run, out.ET.Session, out.ET.M2C_CreateUnits, out.ET.ETVoid }
          },
          class = { 0x6, out.ET.MessageHandlerAttribute() }
        }
      end
    }
  end)
end)
