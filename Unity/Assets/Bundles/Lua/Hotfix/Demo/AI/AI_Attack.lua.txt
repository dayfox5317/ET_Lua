-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
System.namespace("ET", function (namespace)
  namespace.class("AI_Attack", function (namespace)
    local Check, Execute
    Check = function (this, aiComponent, aiConfig)
      local sec = System.mod(System.div(ET.TimeHelper.ClientNow(), 1000), 15)
      if sec >= 10 then
        return 0
      end
      return 1
    end
    Execute = function (this, aiComponent, aiConfig, cancellationToken)
      return System.async(function (async, this, aiComponent, aiConfig, cancellationToken)
        local zoneScene = ET.SceneHelper.DomainScene(aiComponent)

        local myUnit = zoneScene:GetComponent(ET.UnitComponent).MyUnit
        if myUnit == nil then
          return
        end

        -- 停在当前位置
        zoneScene:GetComponent(ET.SessionComponent).Session:Send(ET.C2M_Stop())

        ET.Log.Debug("开始攻击")

        for i = 0, 99999 do
          ET.Log.Debug("攻击: " .. i .. "次")

          -- 因为协程可能被中断，任何协程都要传入cancellationToken，判断如果是中断则要返回
          local timeRet = async:Await(ET.TimerComponent.Instance:WaitAsync(1000, cancellationToken))
          if not timeRet then
            return
          end
        end
      end, nil, this, aiComponent, aiConfig, cancellationToken)
    end
    return {
      base = function (out)
        return {
          out.ET.AAIHandler
        }
      end,
      Check = Check,
      Execute = Execute,
      __metadata__ = function (out)
        return {
          methods = {
            { "Check", 0x286, Check, out.ET.AIComponent, out.ET.AIConfig, System.Int32 },
            { "Execute", 0x386, Execute, out.ET.AIComponent, out.ET.AIConfig, out.ET.ETCancellationToken, out.ET.ETVoid }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
