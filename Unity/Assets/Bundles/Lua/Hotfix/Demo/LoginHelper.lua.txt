-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ETEventType = ET.EventType
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("LoginHelper", function (namespace)
    local Login
    Login = function (zoneScene, address, account)
      return System.async(function (async, zoneScene, address, account)
        System.try(function ()
          -- 创建一个ETModel层的Session
          local r2CLogin
          System.using(ET.NetKcpComponentSystem.Create(zoneScene:GetComponent(ET.NetKcpComponent), ET.NetworkHelper.ToIPEndPoint1(address)), function (session)
            local default = ET.C2R_Login()
            default.Account = account
            default.Password = "111111"
            r2CLogin = System.cast(ET.R2C_Login, async:Await(session:Call1(default)))
          end)

          -- 创建一个gate Session,并且保存到SessionComponent中
          local gateSession = ET.NetKcpComponentSystem.Create(zoneScene:GetComponent(ET.NetKcpComponent), ET.NetworkHelper.ToIPEndPoint1(r2CLogin.Address))
          gateSession:AddComponent2(ET.PingComponent)
          zoneScene:AddComponent2(ET.SessionComponent).Session = gateSession

          local default = ET.C2G_LoginGate()
          default.Key = r2CLogin.Key
          default.GateId = r2CLogin.GateId
          local g2CLoginGate = System.cast(ET.G2C_LoginGate, async:Await(gateSession:Call1(default)))

          ET.Log.Info("登陆gate成功!")

          local default = ETEventType.LoginFinish()
          default.ZoneScene = zoneScene
          async:Await(ET.Game.getEventSystem():Publish(default, ETEventType.LoginFinish))
        end, function (default)
          local e = default
          ET.Log.Error1(e)
        end)
      end, nil, zoneScene, address, account)
    end
    return {
      Login = Login,
      __metadata__ = function (out)
        return {
          methods = {
            { "Login", 0x38E, Login, out.ET.Scene, System.String, System.String, out.ET.ETVoid }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
