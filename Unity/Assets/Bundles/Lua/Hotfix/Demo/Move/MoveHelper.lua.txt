-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ETWaitType = ET.WaitType
System.namespace("ET", function (namespace)
  namespace.class("MoveHelper", function (namespace)
    local MoveToAsync
    MoveToAsync = function (unit, targetPos, cancellationToken)
      return System.async(function (async, unit, targetPos, cancellationToken)
        local default = ET.C2M_PathfindingResult()
        default.X = targetPos.x
        default.Y = targetPos.y
        default.Z = targetPos.z
        local msg = default
        unit:getDomain():GetComponent(ET.SessionComponent).Session:Send(msg)

        local objectWait = unit:GetComponent(ET.ObjectWait)

        -- 要取消上一次的移动协程
        local default = ETWaitType.Wait_UnitStop()
        default:setError(2 --[[WaitTypeError.Cancel]])
        objectWait:Notify(default, ETWaitType.Wait_UnitStop)

        -- 一直等到unit发送stop
        local waitUnitStop = async:Await(objectWait:Wait(cancellationToken, ETWaitType.Wait_UnitStop))
        return waitUnitStop:getError()
      end, nil, unit, targetPos, cancellationToken)
    end
    return {
      MoveToAsync = MoveToAsync,
      __metadata__ = function (out)
        return {
          methods = {
            { "MoveToAsync", 0x38E, MoveToAsync, out.ET.Unit, out.UnityEngine.Vector3, out.ET.ETCancellationToken, out.ET.ETTask_1(System.Int32) }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
