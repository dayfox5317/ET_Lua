-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ETWaitType = ET.WaitType
local UnityEngine = UnityEngine
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("M2C_StopHandler", function (namespace)
    local Run
    Run = function (this, session, message)
      return System.async(function (async, this, session, message)
        local unit = ET.UnitComponentSystem.Get(session:getDomain():GetComponent(ET.UnitComponent), message.Id)

        if unit == nil then
          return
        end

        local pos = UnityEngine.Vector3(message.X, message.Y, message.Z)
        local rotation = UnityEngine.Quaternion(message.A, message.B, message.C, message.W)

        local moveComponent = unit:GetComponent(ET.MoveComponent)
        ET.MoveComponentSystem.Stop(moveComponent)
        unit:setPosition(pos)
        unit:setRotation(rotation)
        local default = unit:GetComponent(ET.ObjectWait)
        if default ~= nil then
          local extern = ETWaitType.Wait_UnitStop()
          extern:setError(message.Error)
          default:Notify(extern, ETWaitType.Wait_UnitStop)
        end
        async:Await(ET.ETTask.getCompletedTask())
      end, nil, this, session, message)
    end
    return {
      base = function (out)
        return {
          out.ET.AMHandler_1(out.ET.M2C_Stop)
        }
      end,
      Run = Run,
      __metadata__ = function (out)
        return {
          methods = {
            { "Run", 0x283, Run, out.ET.Session, out.ET.M2C_Stop, out.ET.ETVoid }
          },
          class = { 0x6, out.ET.MessageHandlerAttribute() }
        }
      end
    }
  end)
end)
