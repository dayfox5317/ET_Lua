-- Generated by CSharp.lua Compiler
local System = System
local ET = ET
local ET
System.import(function (out)
  ET = out.ET
end)
System.namespace("ET", function (namespace)
  namespace.class("AIDispatcherComponentAwakeSystem", function (namespace)
    local Awake
    Awake = function (this, self)
      ET.AIDispatcherComponent.Instance = self
      ET.AIDispatcherComponentSystem.Load(self)
    end
    return {
      base = function (out)
        return {
          out.ET.AwakeSystem_1(out.ET.AIDispatcherComponent)
        }
      end,
      Awake = Awake,
      __metadata__ = function (out)
        return {
          methods = {
            { "Awake", 0x106, Awake, out.ET.AIDispatcherComponent }
          },
          class = { 0x6, out.ET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("AIDispatcherComponentLoadSystem", function (namespace)
    local Load
    Load = function (this, self)
      ET.AIDispatcherComponentSystem.Load(self)
    end
    return {
      base = function (out)
        return {
          out.ET.LoadSystem_1(out.ET.AIDispatcherComponent)
        }
      end,
      Load = Load,
      __metadata__ = function (out)
        return {
          methods = {
            { "Load", 0x106, Load, out.ET.AIDispatcherComponent }
          },
          class = { 0x6, out.ET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("AIDispatcherComponentDestroySystem", function (namespace)
    local Destroy
    Destroy = function (this, self)
      self.AIHandlers:Clear()
      ET.AIDispatcherComponent.Instance = nil
    end
    return {
      base = function (out)
        return {
          out.ET.DestroySystem_1(out.ET.AIDispatcherComponent)
        }
      end,
      Destroy = Destroy,
      __metadata__ = function (out)
        return {
          methods = {
            { "Destroy", 0x106, Destroy, out.ET.AIDispatcherComponent }
          },
          class = { 0x6, out.ET.ObjectSystemAttribute() }
        }
      end
    }
  end)

  namespace.class("AIDispatcherComponentSystem", function (namespace)
    local Load
    Load = function (self)
      self.AIHandlers:Clear()

      local types = ET.Game.getEventSystem():GetTypes(System.typeof(ET.AIHandlerAttribute))
      for _, type in System.each(types) do
        local continue
        repeat
          local aaiHandler = System.as(System.Activator.CreateInstance(type), ET.AAIHandler)
          if aaiHandler == nil then
            ET.Log.Error("robot ai is not AAIHandler: " .. type:getName())
            continue = true
            break
          end
          self.AIHandlers:AddKeyValue(type:getName(), aaiHandler)
          continue = true
        until 1
        if not continue then
          break
        end
      end
    end
    return {
      Load = Load,
      __metadata__ = function (out)
        return {
          methods = {
            { "Load", 0x10E, Load, out.ET.AIDispatcherComponent }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
